<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace属性：用于指定当前的映射文件和哪个接口进行映射，所以需要指定接口的文件路径，故需标注包的完整结构-->
<mapper namespace="com.cy.store.mapper.UserMapper">

    <!--自定义映射规则：resultMap标签来完成映射规则的定义
        id属性：给这个映射规则分配一个唯一的id值，对应的就是resultMap="id属性的值"属性的取值
        type属性：取值是一个类，表示的是数据库中的查询结果与Java中哪个实体类进行结果集的映射
    -->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
        <!--将表的字段和类的属性 不一致 的字段进行匹配指定，一致的则可以省略不写-->
        <!--column属性：表中字段名 property属性：类中属性名 两者配合完成名称不一致的映射-->
        <!--定义映射规则时，主键不允许省略！-->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

    <!-- id表示映射接口中方法名称，直接在标签内部编写sql语句-->
    <!-- uid是主键，sql语言已设定为自增（AUTO_INCREMENT），不写在下面的语句中 -->
    <!--
        useGeneratedKeys属性：表示开启某个字段（一般是主键）值的递增
        keyProperty属性：设为自增的字段对应的【实体类的属性名】
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user (
        username, password, salt, phone, email,
        gender, avatar, is_delete,
        created_user, created_time,
        modified_user, modified_time
        ) VALUES (
        <!--下面的值是前端传过来的实例值，因此需要改成驼峰命名法
        mybatis要求用 #{} 对变量占位-->
        #{username}, #{password}, #{salt}, #{phone}, #{email},
        #{gender}, #{avatar}, #{isDelete},
        #{createdUser}, #{createdTime},
        #{modifiedUser}, #{modifiedTime}
        )
    </insert>

    <!--select语句执行的时候，查询的是一个对象或多个对象
        resultType：用于表示查询的结果集类型，需要指定对应映射的类的类型，并且包含完整的包结构
        resultMap：当表的字段和属性字段一致时无碍，若不一致则需要自定义查询结果集的映射规则
    -->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * from t_user WHERE username = #{username}
    </select>

    <update id="updatePasswordByUid" >
        UPDATE t_user SET
            password=#{password},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE uid=#{uid}
    </update>

    <select id="findByUid" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE uid=#{uid}
    </select>

    <update id="updateInfoByUid">
        UPDATE t_user SET
        <!--if是条件判断标签，test属性接收的是一个返回值为boolean类型的条件。
            如果test的条件结果为真，则if标签内的语句执行-->
        <if test="phone!=null">phone=#{phone},</if>
        <if test="email!=null">email=#{email},</if>
        <if test="gender!=null">gender=#{gender},</if>
        modified_user=#{modifiedUser},
        modified_time=#{modifiedTime}
        WHERE uid=#{uid}
    </update>

    <update id="updateAvatarByUid">
        UPDATE t_user
        SET
            avatar=#{avatar},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE
            uid=#{uid}
    </update>

</mapper>